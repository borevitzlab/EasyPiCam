#IPVAL: '192.168.1.114'
IPVAL: '10.132.11.32:4442'
USERVAL: root
PASSVAL: admin

# camera
ImageSizeList:
- [1280, 720]
- [800, 450]
- [480, 270]
- [320, 180]
URL_SetImageSize: USERVAL:PASSVAL@IPVAL/axis-cgi/param.cgi?action=update&Image.I0.Resolution=WIDTHVALxHEIGHTVAL
URL_SetZoom: USERVAL:PASSVAL@IPVAL/axis-cgi/com/ptz.cgi?zoom=ZOOMVAL
URL_SetFocus: USERVAL:PASSVAL@IPVAL/axis-cgi/com/ptz.cgi?focus=FOCUSVAL
URL_SetFocusAuto: USERVAL:PASSVAL@IPVAL/axis-cgi/com/ptz.cgi?autofocus=on
URL_SetFocusManual: USERVAL:PASSVAL@IPVAL/axis-cgi/com/ptz.cgi?autofocus=off
URL_GetImage: USERVAL:PASSVAL@IPVAL/axis-cgi/bitmap/image.bmp
URL_GetImage: USERVAL:PASSVAL@IPVAL/axis-cgi/bitmap/image.bmp?resolution=WIDTHVALxHEIGHTVAL&compression=0
URL_GetImageSize: USERVAL:PASSVAL@IPVAL/axis-cgi/imagesize.cgi?camera=1
#URL_GetVideo: USERVAL:PASSVAL@IPVAL/axis-cgi/mjpg/video.cgi
RET_GetImage: RAW_BMP ## need to parse binary JPG data like:
                      # stream = urllib.urlopen(URL_GetImage)
                      # byte_array = io.BytesIO(stream.read())
                      # Image = np.array(PIL.Image.open(byte_array))
RET_GetVideo: RAW_MJPG
URL_GetZoom: USERVAL:PASSVAL@IPVAL/axis-cgi/com/ptz.cgi?query=position
URL_GetFocus: USERVAL:PASSVAL@IPVAL/axis-cgi/com/ptz.cgi?query=position
RET_GetImageSize: 'image width = {}\nimage height = {}'
RET_GetZoom: '*zoom={}*'
RET_GetFocus: '*focus={}*'

# pan and tilt
Type: StepperMotors
PanRange: [-180, 180]
TiltRange: [-90, 19]
ZoomRange: [1, 9999]
ZoomVal: 9999
URL_SetPan: USERVAL:PASSVAL@IPVAL/axis-cgi/com/ptz.cgi?pan=PANVAL
URL_SetTilt: USERVAL:PASSVAL@IPVAL/axis-cgi/com/ptz.cgi?tilt=TILTVAL
URL_SetPanTilt: USERVAL:PASSVAL@IPVAL/axis-cgi/com/ptz.cgi?pan=PANVAL&tilt=TILTVAL
URL_GetPanTilt: USERVAL:PASSVAL@IPVAL/axis-cgi/com/ptz.cgi?query=position
RET_GetPanTilt: '*pan={}*tilt={}*'

